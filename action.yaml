name: 'Traefik Hub'
description: 'Static Analysis on Traefik Hub CRD'
branding:
  icon: 'shield'
  color: 'gray-dark'
inputs:
  version:
    description: 'Version of hub-static-analyzer to use. E.g. "v0.1.0". Default: "latest"'
    required: false
    default: 'latest'
  path:
    description: 'Path to the manifests within a Git repository'
    required: false
    default: "./"
  exclude:
    description: 'Exclude the matching manifests'
    required: false
    default: ''
  # Lint options.
  lint:
    description: 'Lint manifests. . Default: "false"'
    required: false
    default: "false"
  lint-output-file:
    description: 'Filename to store lint output. File will be overwritten if it exists. Default: "traefik-hub-static-analyzer-lint.out"'
    required: false
    default: 'traefik-hub-static-analyzer-lint.out'
  lint-format:
    description: 'Format, one of: unix, json, checkstyle'
    required: false
    default: 'unix'

  # Diff options.
  diff:
    description: 'Generate a diff report. Default: "false"'
    required: false
    default: "false"
  diff-range:
    description: 'Range of commits on which to run the diff. E.g. 12345d...12345b, HEAD~3'
    required: false
  diff-output-file:
    description: 'Filename to store diff output. File will be overwritten if it exists. Default: "traefik-hub-static-analyzer-diff.out"'
    required: false
    default: 'traefik-hub-static-analyzer-diff.out'
runs:
  using: "composite"
  steps:
    - name: download hub-static-analyzer
      shell: bash
      run: |
        # Download hub-static-analyzer
        set -u

        if [ ${{ runner.arch }} = "ARM64" ]; then
          RELEASE_ARCH="arm64"
        elif [ ${{ runner.arch }} = "X64" ]; then
          RELEASE_ARCH="amd64"
        else
          RELEASE_ARCH="amd64"
        fi

        if [ ${{ runner.os }} = "macOS" ]; then
          RELEASE_OS="darwin"
        elif [ ${{ runner.os }} = "Linux" ]; then
          RELEASE_OS="linux"
        else
          RELEASE_OS="linux"
        fi

        PATTERN="static-analyzer-*-${RELEASE_OS}-${RELEASE_ARCH}*"
        REPOSITORY='traefik/hub'
        TARGET="hub-static-analyzer.tar.gz"
        if [[ "${{ inputs.version }}" == "latest" ]]; then
          gh release download --repo "${REPOSITORY}" --pattern "${PATTERN}" --output "${TARGET}" "static-analyzer-v1.0.0" > /dev/null
        else
          gh release download --repo "${REPOSITORY}" --pattern "${PATTERN}" --output "${TARGET}" "static-analyzer-${{ inputs.version }}" > /dev/null
        fi

        tar -xf "$TARGET" --strip-components 1
    - name: run static analysis
      shell: bash
      run: |
        # hub-static-analyzer
        set -u
        set +e

        if [ ${{ inputs.lint }} = "true" ]; then
          echo \$ hub-static-analyzer lint --path "${{ inputs.path }}" --format "${{ inputs.lint-format }}" --exclude "${{ inputs.exclude }}"
          (./hub-static-analyzer lint --path "${{ inputs.path }}" --format "${{ inputs.lint-format }}" --exclude "${{ inputs.exclude }}" > "${{ inputs.lint-output-file }}")&

          pids+=($!)
        fi

        if [ ${{ inputs.diff }} = "true" ]; then
          echo \$ hub-static-analyzer diff --path "${{ inputs.path }}" --format "${{ inputs.lint-format }}" --exclude "${{ inputs.exclude }}"
          (./hub-static-analyzer diff --path "${{ inputs.path }}" ${{ inputs.diff-range }} --exclude "${{ inputs.exclude }}" | tee "${{ inputs.diff-output-file }}")&

          pids+=($!)
        fi

        for pid in ${pids[@]}; do
          wait ${pid}

          statuses+=($?)
        done

        [ -s ${{ inputs.lint-output-file }} ] || rm -f ${{ inputs.lint-output-file }}
        [ -s ${{ inputs.diff-output-file }} ] || rm -f ${{ inputs.diff-output-file }}

        # echo "Statuses ${statuses}"

        for st in ${statuses[@]}; do
          if [[ ${st} -ne 0 ]]; then
            echo "Found errors in this PR"
            exit 1
          fi
        done
